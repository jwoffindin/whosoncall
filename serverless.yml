# Deploy lambda behind API gateway that returns current on-call user for
# given PagerDuty schedule.
service: WhosOnCall

package:
 exclude:
   - ./**
 include:
   - ./bin/**

custom:
  secretName: ${file(config.${opt:stage, 'dev'}.json):secret-name}

provider:
  name: aws
  runtime: go1.x
  memorySize: 128
  apiKeys:
    # https://serverless.com/framework/docs/providers/aws/events/apigateway/#setting-api-keys-for-your-rest-api
    - testKey
  usagePlan:
    quota:
      limit: 500
      offset: 2
      period: MONTH
    throttle:
      burstLimit: 20
      rateLimit: 10

  iamRoleStatements:
    - Effect: Allow
      Action: secretsmanager:GetSecretValue
      Resource: 'arn:aws:secretsmanager:#{AWS::Region}:#{AWS::AccountId}:secret:${self:provider.stage}/${self:custom.secretName}'

functions:
  whosoncall:
    handler: bin/whos-on-call
    environment:
      PAGERDUTY_API_TOKEN: 'arn:aws:secretsmanager:#{AWS::Region}:#{AWS::AccountId}:secret:${self:provider.stage}/${self:custom.secretName}'
    events:
      - http:
          path: whos-on-call
          method: get
          # integration: lambda
          private: true
          # cors: false
          # request:
          #   parameters:
          #     querystrings:
          #       schedule: true
plugins:
  - serverless-pseudo-parameters
